@model Roll.Models.skill_abm

@{
    Layout = "/Views/personajes/_LayoutPage1.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        
        
    <div class="form-horizontal">
        <h4>skill</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.skill.id_skill)

        <div class="form-group">
            @Html.LabelFor(model => model.skill.skill_nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skill.skill_nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skill.skill_nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill_nivel, "skill_nivel", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("skill_nivel", null, htmlAttributes: new { @class = "form-control select_nivel" })
                @Html.ValidationMessageFor(model => model.skill_nivel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill_tipo, "skill_tipo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("skill_tipo", null, htmlAttributes: new { @class = "form-control select_tipo" })
                @Html.ValidationMessageFor(model => model.skill_tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill_atributo, "skill_atributo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("skill_atributo", null, htmlAttributes: new { @class = "form-control select_alineamiento" })
                @Html.ValidationMessageFor(model => model.skill_atributo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill.skill_costo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skill.skill_costo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skill.skill_costo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill.skill_costo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skill.skill_costo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skill.skill_costo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill.skill_tipo_efecto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skill.skill_tipo_efecto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skill.skill_tipo_efecto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill.skill_danio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skill.skill_danio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skill.skill_danio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill.skill_dado_basico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skill.skill_dado_basico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skill.skill_dado_basico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill.skill_requisito, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skill.skill_requisito, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skill.skill_requisito, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skill_alineamiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("skill_alineamiento", null, htmlAttributes: new { @class = "form-control select_alineamiento" })
                @Html.ValidationMessageFor(model => model.skill_alineamiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Modificar" id="btn_editar_skill" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
